order <- order[order(-order$`Percentage of Protein IDs`),]
View(order)
df_A <- plot_df[plot_df$DataSet == "Included at RBP census",]
order <- df_A %>% group_by(Gene) %>% summarise(Count = sum(count))
order <- order[order(-order$Count),]
View(order)
order <- df_A[df_A$`Included in data set` == T,]
order <- order[order(-order$`Percentage of Protein IDs`),]
View(order)
df_A$Gene <- factor(df_A$Gene, levels = unique(order$Gene))
filename <- paste0("./01_OutputFiles/",gsub("-","",Sys.Date()),"_",direction,"Regulated_CensusCounts.pdf")
colors <- brewer.pal(n = 4, name = "Greys")
colors <- c(colors[4],"#000000")
plot_A <- ggplot(df_A, aes(fill=`Included in data set`, y = count , x= Gene)) +
# geom_bar(position="stack", stat="identity")+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(labels = c("Not included", expression(paste("Hentze, M. ", italic("et al."), " 2018"))),
values = colors)+
geom_hline(yintercept=0.7, linetype="dashed", size = 1, color = "#ff8aad" )+
geom_hline(yintercept=0.5, linetype="dashed", size = 1, color = "#990000" )+
labs(fill = "RBP census")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.title = element_text(size = 16, face="bold"))+
theme(legend.text = element_text(size = 14))+
theme(legend.key.size = unit(1, 'cm'))+
theme(legend.position = "top")+
# theme(panel.grid.minor = element_line(linetype = 'solid', colour = grid_colour))+
theme(panel.grid.major = element_line(linetype = 'solid', colour = grid_colour))+
xlab("IP - Gene name")+
ylab("Enriched interactors (%)")
plot_A
ggsave(plot = plot_A, filename = filename, useDingbats=FALSE, width = 15, height = 7.5)
setwd("U:/Desktop/RBPs/00_MainAnalysis_OnlyPositive/01_IPscreen/All/LFQ/03_RNAmediated_Interactions")
setwd("U:/Desktop/RBPs/00_MainAnalysis_OnlyPositive/01_IPscreen/All/LFQ/03_RNAmediated_Interactions")
###################################
######### Libraries ###############
###################################
library(readr)
library(ggplot2)
library(ggsignif)
library(ggforce)
library(viridis)
library(dplyr)
library(xlsx)
library(readxl)
library(RColorBrewer)
library(ggpubr)
###################################
######### Variables ###############
###################################
census <- read.csv("./01_InputFiles/SC_RBPs_Census.csv")
census <- census$ID
files <- list.files(path = "./00_IPsResultsFiles/", pattern = "_RNase.csv")
direction <- "Up"
screen <- read_excel("../../../00_IPScreeningMasterFile.xlsx")
grid_colour <- "#D95F02"
###################################
########### Script ################
###################################
enriched <- c()
if (direction == "Up") {
for (i in 1:length(files)) {
loop <- read.csv(paste0("./00_IPsResultsFiles/",files[i]))
loop <- loop[loop$difference_IP_RNase > 0,]
loop <- loop$Protein.IDs
loop <- list(loop)
enriched <- c(enriched, loop)
}
}else{
for (i in 1:length(files)) {
loop <- read.csv(paste0("./00_IPsResultsFiles/", files[i]))
loop <- loop[loop$difference_IP_RNase < 0,]
loop <- loop$Protein.IDs
loop <- list(loop)
enriched <- c(enriched, loop)
}
}
files <- list.files(path = "../../../../00_Candidates/00_CandidateInteractions/SGD/", pattern = "_toHighlight.txt")
sgd <- c()
for (i in 1:length(files)) {
loop <- read_delim(paste0("../../../../00_Candidates/00_CandidateInteractions/SGD/", files[i]), "\t", escape_double = FALSE, trim_ws = TRUE,col_names = F)
loop <- loop$X1
loop <- list(loop)
sgd <- c(sgd, loop)
}
files <- list.files(path = "../../../../00_Candidates/00_CandidateInteractions/BioGRID/", pattern = "_BiogridInteractions.txt")
biogrid <- c()
for (i in 1:length(files)) {
loop <- read_delim(paste0("../../../../00_Candidates/00_CandidateInteractions/BioGRID/", files[i]), "\t", escape_double = FALSE, trim_ws = TRUE,col_names = T)
loop <- loop[loop$`Experimental System Type` == "physical",]
loop <- unique(c(loop$`Systematic Name Interactor A`, loop$`Systematic Name Interactor B`))
loop <- list(loop)
biogrid <- c(biogrid, loop)
}
overlap <- c()
for (i in 1:length(enriched)) {
loop <- intersect(unlist(enriched[i]), unlist(sgd[i]))
loop <- list(loop)
overlap <- c(overlap, loop)
}
overlap_census <- c()
for (i in 1:length(enriched)) {
loop <- intersect(unlist(enriched[i]), census)
loop <- list(loop)
overlap_census <- c(overlap_census, loop)
}
overlap_biogrid <- c()
for (i in 1:length(enriched)) {
loop <- intersect(unlist(enriched[i]), unlist(biogrid[i]))
loop <- list(loop)
overlap_biogrid <- c(overlap_biogrid, loop)
}
IP <- gsub(pattern = "_.*",replacement = "", x = files)
df <- c()
for (i in 1:length(enriched)) {
df2 <- data.frame(unlist(enriched[i]), rep(FALSE, length(unlist(enriched[i]))), rep(FALSE, length(unlist(enriched[i]))))
colnames(df2) <- c("Protein ID", "Included SGD", "Included BioGRID")
df2$`Included SGD` <- df2$`Protein ID` %in% unlist(overlap[i])
df2$`Included BioGRID` <- df2$`Protein ID` %in% unlist(overlap_biogrid[i])
df2$`Included in data set` <- as.character(interaction(df2$`Included SGD`, df2$`Included BioGRID`))
df2 <- df2 %>%
group_by(df2$`Included in data set`) %>%
summarize(count = n())%>%
mutate(perc = count/sum(count))
df2$DataSet <- "Included at interactor database"
colnames(df2)[c(1,3)] <- c("Included in data set", "Percentage of Protein IDs")
df2$IP <- IP[i]
df3 <- data.frame(unlist(enriched[i]), rep(FALSE, length(unlist(enriched[i]))))
df3$rep.FALSE..length.unlist.enriched.i.... <- df3$unlist.enriched.i.. %in% unlist(overlap_census[i])
colnames(df3) <- c("Protein ID", "Included in data set")
df3 <- df3 %>%
group_by(df3$`Included in data set`) %>%
summarize(count = n())%>%
mutate(perc = count/sum(count))
df3$DataSet <- "Included at RBP census"
colnames(df3)[c(1,3)] <- c("Included in data set", "Percentage of Protein IDs")
df3$IP <- IP[i]
loop <- rbind(df2,df3)
loop <- list(loop)
df <- c(df, loop)
}
plot_df <- c()
for (i in 1:length(df)) {
loop <- df[[i]]
plot_df <- rbind(plot_df, loop)
}
plot_df$DataSet <- factor(plot_df$DataSet, levels = c("Included at interactor database",
"Included at RBP census"))
plot_df$Gene <- plot_df$IP
for (i in 1:nrow(plot_df)) {
stock <- plot_df$IP[i]
gene <- screen[screen$Stock_Name == stock,]$Gene_Name
plot_df$Gene[i] <- unique(gene)
}
plot_df$Gene <- factor(x = plot_df$Gene, levels = unique(plot_df$Gene))
## GeneName Figure:
### Census
df_A <- plot_df[plot_df$DataSet == "Included at RBP census",]
# order <- df_A %>% group_by(Gene) %>% summarise(Count = sum(count))
#
# order <- order[order(-order$Count),]
#
# write.csv(order, file = paste0("./01_OutputFiles/", gsub(pattern = "-",replacement = "",x = Sys.Date()),"_",direction,"Regulated_CountTable.csv"),row.names = F)
order <- df_A[df_A$`Included in data set` == T,]
order <- order[order(-order$`Percentage of Protein IDs`),]
df_A$Gene <- factor(df_A$Gene, levels = unique(order$Gene))
filename <- paste0("./01_OutputFiles/",gsub("-","",Sys.Date()),"_",direction,"Regulated_CensusCounts.pdf")
# colors <- viridis(end = 0.9, n = 2,option = "A")
# colors <- brewer.pal(n = 8, name = "Dark2")[c(1,2)]
colors <- brewer.pal(n = 4, name = "Greys")
colors <- c(colors[4],"#000000")
plot_A <- ggplot(df_A, aes(fill=`Included in data set`, y = count , x= Gene)) +
# geom_bar(position="stack", stat="identity")+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(labels = c("Not included", expression(paste("Hentze, M. ", italic("et al."), " 2018"))),
values = colors)+
geom_hline(yintercept=0.7, linetype="dashed", size = 1, color = "#ff8aad" )+
geom_hline(yintercept=0.5, linetype="dashed", size = 1, color = "#990000" )+
labs(fill = "RBP census")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.title = element_text(size = 16, face="bold"))+
theme(legend.text = element_text(size = 14))+
theme(legend.key.size = unit(1, 'cm'))+
theme(legend.position = "top")+
# theme(panel.grid.minor = element_line(linetype = 'solid', colour = grid_colour))+
theme(panel.grid.major = element_line(linetype = 'solid', colour = grid_colour))+
xlab("IP - Gene name")+
ylab("Enriched interactors (%)")
plot_A
ggsave(plot = plot_A, filename = filename, useDingbats=FALSE, width = 15, height = 7.5)
setwd("U:/Desktop/RBPs/00_MainAnalysis_OnlyPositive/00_Candidates")
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
files <- list.files(path = "./00_CandidateInteractions/BioGRID/",
pattern = "BiogridInteractions.txt")
counts <- c()
for (i in 1:length(files)) {
interaction <- read_delim(file = paste0("00_CandidateInteractions/BioGRID/",
files[i]),
"\t",
escape_double = FALSE,
trim_ws = TRUE)
interaction <- interaction[interaction$`Experimental System Type` == "physical",]
counts_loop <- interaction %>% count(`Experimental System`)%>%
mutate(percent = n/sum(n))
counts_loop$Gene <- gsub(pattern = "Y.*_",replacement = "",
x = gsub(pattern = "_B.*",replacement = "",x = files[i]))
counts <- rbind(counts, counts_loop)
}
order <- aggregate(counts$n, by=list(counts$Gene), FUN=sum)
order <- order[order(-order$x),]
counts$Gene <- factor(x = counts$Gene,levels = order$Group.1)
greys <- brewer.pal(n = 9,name = "Greys")
colors <- colorRampPalette(greys[5:9])(17)
colors[2] <- "#990000"
raw <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="stack", stat="identity")+
scale_fill_manual(values = colors)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "top")+
xlab("Gene")+
ylab("BioGRID reported interactors (n)")
ggsave(raw, filename = "./02_OutputFiles/Raw.pdf",width = 15,height = 7.5)
order <- counts[counts$`Experimental System` == "Affinity Capture-MS",]
order <- order[order(-order$percent),]
order <- as.character(order$Gene)
order <- c(order,"HBS1")
counts$Gene <- factor(x = counts$Gene,levels = order)
system <- counts$`Experimental System`
system
system <- unique(counts$`Experimental System`)
system
system <- order(unique(counts$`Experimental System`))
system
system <- counts[order(counts$`Experimental System`),]
system <- unique(system$`Experimental System`)
system
counts$`Experimental System` <- factor(x = counts$`Experimental System`,levels = sytem)
counts$`Experimental System` <- factor(x = counts$`Experimental System`,levels = system)
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
percent
system <- system[2,1,3:17]
system <- system[c(2,1,3:17)]
counts$`Experimental System` <- factor(x = counts$`Experimental System`,levels = system)
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
percent
system
colors <- colorRampPalette(greys[5:9])(17)
colors[1] <- "#990000"
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
percent
counts$`Experimental System` <- factor(x = counts$`Experimental System`,levels = -system)
counts$`Experimental System` <- factor(x = counts$`Experimental System`,levels = rev(system))
colors <- colorRampPalette(greys[5:9])(17)
colors[1] <- "#990000"
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
percent
colors <- rev(colors)
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
percent
source('U:/Desktop/RBPs/00_MainAnalysis_OnlyPositive/00_Candidates/02_BioGRID_ExperimentalEvidence.R', echo=TRUE)
greys <- brewer.pal(n = 9,name = "Greys")
colors <- colorRampPalette(greys[5:9])(17)
colors[1] <- "#990000"
colors <- rev(colors)
raw <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="stack", stat="identity")+
scale_fill_manual(values = colors)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "top")+
xlab("Gene")+
ylab("BioGRID reported interactors (n)")
ggsave(raw, filename = "./02_OutputFiles/Raw.pdf",width = 15,height = 7.5)
order <- counts[counts$`Experimental System` == "Affinity Capture-MS",]
order <- order[order(-order$percent),]
order <- as.character(order$Gene)
order <- c(order,"HBS1")
counts$Gene <- factor(x = counts$Gene,levels = order)
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
ggsave(percent, filename = "./02_OutputFiles/Percent.pdf",width = 15,height = 7.5)
finalplot <- ggarrange(raw,percent, labels = c("(A)", "(B)"), ncol =1,
font.label = list(size = 18))
ggsave(finalplot, filename = "./02_OutputFiles/ExperimentalEvidence.pdf",width = 15,height = 15)
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position="fill", stat="identity", position = position_stack(reverse = T))+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
percent
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(stat="identity", position = position_fill(reverse = T))+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
percent
raw <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position = position_fill(reverse = T), stat="identity")+
scale_fill_manual(values = colors)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "top")+
xlab("Gene")+
ylab("BioGRID reported interactors (n)")
raw
order <- aggregate(counts$n, by=list(counts$Gene), FUN=sum)
order <- order[order(-order$x),]
counts$Gene <- factor(x = counts$Gene,levels = order$Group.1)
system <- counts[order(counts$`Experimental System`),]
system <- unique(system$`Experimental System`)
system <- system[c(2,1,3:17)]
counts$`Experimental System` <- factor(x = counts$`Experimental System`,levels = system)
greys <- brewer.pal(n = 9,name = "Greys")
colors <- colorRampPalette(greys[5:9])(17)
colors[1] <- "#990000"
colors <- colors
raw <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position = position_fill(reverse = T), stat="identity")+
scale_fill_manual(values = colors)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "top")+
xlab("Gene")+
ylab("BioGRID reported interactors (n)")
raw
files <- list.files(path = "./00_CandidateInteractions/BioGRID/",
pattern = "BiogridInteractions.txt")
counts <- c()
for (i in 1:length(files)) {
interaction <- read_delim(file = paste0("00_CandidateInteractions/BioGRID/",
files[i]),
"\t",
escape_double = FALSE,
trim_ws = TRUE)
interaction <- interaction[interaction$`Experimental System Type` == "physical",]
counts_loop <- interaction %>% count(`Experimental System`)%>%
mutate(percent = n/sum(n))
counts_loop$Gene <- gsub(pattern = "Y.*_",replacement = "",
x = gsub(pattern = "_B.*",replacement = "",x = files[i]))
counts <- rbind(counts, counts_loop)
}
order <- aggregate(counts$n, by=list(counts$Gene), FUN=sum)
order <- order[order(-order$x),]
counts$Gene <- factor(x = counts$Gene,levels = order$Group.1)
system <- counts[order(counts$`Experimental System`),]
system <- unique(system$`Experimental System`)
system <- system[c(2,1,3:17)]
counts$`Experimental System` <- factor(x = counts$`Experimental System`,levels = system)
greys <- brewer.pal(n = 9,name = "Greys")
colors <- colorRampPalette(greys[5:9])(17)
colors[1] <- "#990000"
colors <- colors
raw <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position = position_fill(reverse = T), stat="identity")+
scale_fill_manual(values = colors)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "top")+
xlab("Gene")+
ylab("BioGRID reported interactors (n)")
raw
raw <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position = position_stack(reverse = T), stat="identity")+
scale_fill_manual(values = colors)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "top")+
xlab("Gene")+
ylab("BioGRID reported interactors (n)")
raw
raw <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(position = position_stack(reverse = T), stat="identity")+
scale_fill_manual(values = colors)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "top")+
xlab("Gene")+
ylab("BioGRID reported interactors (n)")
ggsave(raw, filename = "./02_OutputFiles/Raw.pdf",width = 15,height = 7.5)
order <- counts[counts$`Experimental System` == "Affinity Capture-MS",]
order <- order[order(-order$percent),]
order <- as.character(order$Gene)
order <- c(order,"HBS1")
counts$Gene <- factor(x = counts$Gene,levels = order)
percent <- ggplot(counts, aes(fill=`Experimental System`, y=n, x=Gene)) +
geom_bar(stat="identity", position = position_fill(reverse = T))+
scale_fill_manual(values = colors)+
geom_hline(yintercept=0.5, linetype="dashed", size = 1)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"))+
theme(legend.key.size = unit(0.5, 'cm'))+
theme(legend.position = "none")+
xlab("Gene")+
ylab("BioGRID reported interactors (%)")
ggsave(percent, filename = "./02_OutputFiles/Percent.pdf",width = 15,height = 7.5)
finalplot <- ggarrange(raw,percent, labels = c("(A)", "(B)"), ncol =1,
font.label = list(size = 18))
ggsave(finalplot, filename = "./02_OutputFiles/ExperimentalEvidence.pdf",width = 15,height = 15)
raw
